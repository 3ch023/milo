{
  "version": 3,
  "sources": ["../src/merch-cards.js", "../src/deeplink.js", "../src/media.js", "../src/global.css.js", "../src/merch-card.js", "../src/merch-card.css.js", "../src/utils.js", "../src/img/secure-transaction.svg", "../src/img/ellipsis.svg", "../src/img/checkmark-white-small.svg", "../src/focus.js"],
  "sourcesContent": ["import { css, html, LitElement } from 'lit';\nimport { deeplink, pushState } from './deeplink';\n\nimport './global.css.js';\nimport { MERCH_CARD_NODE_NAME } from './merch-card';\n\nconst MERCH_CARDS = 'merch-cards';\n\nconst SortOrder = {\n    alphabetical: 'alphabetical',\n    authored: 0,\n};\n\nconst makeCategoryFilter =\n    ({ filter }) =>\n    (elements) =>\n        elements.filter((element) => element.filters.hasOwnProperty(filter));\n\nconst makeTypeFilter = ({ types }) => {\n    if (!types) {\n        return (elements) => elements;\n    }\n    types = types.split(',');\n    return (elements) =>\n        elements.filter((element) =>\n            types.some((type) => element.types.includes(type))\n        );\n};\n\nconst makeAlphabeticalSorter = () => (elements) =>\n    elements.sort((a, b) =>\n        (a.title ?? '').localeCompare(b.title ?? '', 'en', {\n            sensitivity: 'base',\n        })\n    );\n\nconst makeAuthoredSorter =\n    ({ filter }) =>\n    (elements) =>\n        elements.sort((a, b) => {\n            if (a.filters[filter] && b.filters[filter]) {\n                return a.filters[filter] - b.filters[filter];\n            }\n            // if no explicit order, do not sort, keep same order.\n            return -1;\n        });\n\nconst makeSearcher = ({ search }) => {\n    if (search?.length) {\n        search = search.toLowerCase();\n        return (elements) =>\n            elements.filter((element) => element.includes(search));\n    }\n    return (elements) => elements;\n};\n\nexport class MerchCards extends LitElement {\n    static properties = {\n        filter: { type: String, attribute: 'filter', reflect: true },\n        filtered: { type: String, attribute: 'filtered' }, // freeze filter\n        search: { type: String, attribute: 'search', reflect: true },\n        sort: {\n            type: Number,\n            attribute: 'sort',\n            default: SortOrder.authored,\n            reflect: true,\n        },\n        types: { type: String, attribute: 'types', reflect: true },\n        limit: { type: Number, attribute: 'limit' },\n        page: { type: Number, attribute: 'page', reflect: true },\n        singleApp: { type: String, attribute: 'single_app' },\n        showMoreText: { type: String, attribute: 'show-more-text' },\n        hasMore: { type: Boolean },\n    };\n\n    constructor() {\n        super();\n        // set defaults\n        this.filter = 'all';\n        this.hasMore = false;\n    }\n\n    render() {\n        return html`<slot></slot> ${this.showMoreButton}`;\n    }\n\n    updated(changedProperties) {\n        let updateChildren = false;\n        const children = [...this.children].filter(\n            (child) => child.tagName === MERCH_CARD_NODE_NAME\n        );\n        if (changedProperties.has('singleApp') && this.singleApp) {\n            children.forEach((card) => {\n                card.updateFilters(card.name === this.singleApp);\n            });\n        }\n        if (\n            !this._filters ||\n            changedProperties.has('filter') ||\n            changedProperties.has('types')\n        ) {\n            this._filters = [makeCategoryFilter(this), makeTypeFilter(this)];\n            updateChildren = true;\n        }\n        if (!this._searcher || changedProperties.has('search')) {\n            this._searcher = makeSearcher(this);\n            updateChildren = true;\n        }\n        if (!this._sorter || changedProperties.has('sort')) {\n            this._sorter =\n                this.sort === SortOrder.alphabetical\n                    ? makeAlphabeticalSorter(this)\n                    : makeAuthoredSorter(this);\n            updateChildren = true;\n        }\n\n        const reducers = [...this._filters, this._searcher, this._sorter];\n\n        let result = reducers\n            .reduce((elements, reducer) => reducer(elements), children)\n            .map((element, index) => [element, index]);\n\n        if (this.page && this.limit) {\n            const pageSize = this.page * this.limit;\n            this.hasMore = result.length > pageSize;\n            result = result.filter(([, index]) => index < pageSize);\n        }\n        if (result.length > 0) {\n            this.cardToScrollTo = result[result.length - 1][0];\n        }\n        let reduced = new Map(result);\n        children.forEach((child) => {\n            if (reduced.has(child)) {\n                child.style.order = reduced.get(child);\n                child.style.removeProperty('display');\n            } else {\n                child.style.display = 'none';\n                child.style.removeProperty('order');\n            }\n        });\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.startDeeplink();\n        this.updateComplete.then(() => {\n            if (this.filtered) {\n                this.filter = this.filtered;\n            }\n            this.prepareShowMore();\n        });\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.stopDeeplink();\n    }\n\n    get showMoreButton() {\n        if (!this.hasMore) return;\n        return html`<button style=\"order: 1000;\" @click=\"${this.showMore}\">\n            ${this.showMoreText}\n        </button>`;\n    }\n\n    showMore() {\n        pushState({ page: this.page + 1 });\n        setTimeout(() => {\n            this.scrollToShowMore();\n        }, 1);\n    }\n\n    prepareShowMore() {\n        if (this.page) {\n            this.limit = this.limit || 27;\n        } else {\n            this.page = 1;\n        }\n    }\n\n    scrollToShowMore() {\n        this.cardToScrollTo.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    startDeeplink() {\n        this.stopDeeplink = deeplink(\n            ({ filter, types, sort, search, single_app, page }) => {\n                if (filter && filter !== this.filter) {\n                    setTimeout(() => {\n                        pushState({ page: undefined });\n                        this.page = 1;\n                    }, 1);\n                }\n                if (!this.filtered) {\n                    this.filter = filter ?? this.filter;\n                }\n                this.types = types ?? '';\n                this.search = search ?? '';\n                this.singleApp = single_app;\n                this.sort = sort;\n                this.page = Number(page) || this.page;\n            }\n        );\n    }\n\n    static styles = [\n        css`\n            :host > button {\n                grid-column: 1 / -1;\n                place-self: baseline;\n                background-color: transparent;\n                border-radius: 16px;\n                border: 2px solid var(--text-color, #2c2c2c);\n                color: var(--text-color, #2c2c2c);\n                display: inline-block;\n                font-size: 15px;\n                font-style: normal;\n                font-weight: 700;\n                line-height: 16px;\n                padding: 5px 14px;\n            }\n\n            :host > button:hover {\n                background-color: var(--color-black, #000);\n                border-color: var(--color-black, #000);\n                color: var(--color-white, #fff);\n            }\n        `,\n    ];\n}\n\nMerchCards.SortOrder = SortOrder;\n\nif (!customElements.get(MERCH_CARDS)) {\n    customElements.define(MERCH_CARDS, MerchCards);\n}\n", "const EVENT_HASHCHANGE = 'hashchange';\n\n/**\n * @param {*} hash string representing an URL hash\n * @returns an object representing the state set with key value pairs in the URL hash\n */\nexport function parseState(hash = window.location.hash) {\n    const result = [];\n    const keyValuePairs = hash.replace(/^#/, '').split('&');\n\n    for (const pair of keyValuePairs) {\n        const [key, value = ''] = pair.split('=');\n        if (key) {\n            result.push([key, decodeURIComponent(value)]);\n        }\n    }\n    return Object.fromEntries(result);\n}\n\nexport function pushState(state) {\n    const hash = new URLSearchParams(window.location.hash.slice(1));\n    Object.entries(state).forEach(([key, value]) => {\n        if (value) {\n            hash.set(key, value);\n        } else {\n            hash.delete(key);\n        }\n    });\n    window.location.hash = decodeURIComponent(hash.toString());\n}\n\n/**\n *Deep link helper\n * @param {*} callback function that expect and object with properties that have changed compared to previous state\n * @returns a disposer function that stops listening to hash changes\n */\nexport function deeplink(callback) {\n    const handler = (e) => {\n        const state = parseState(window.location.hash);\n        callback(state);\n    };\n    handler();\n    window.addEventListener(EVENT_HASHCHANGE, handler);\n    return () => {\n        window.removeEventListener(EVENT_HASHCHANGE, handler);\n    };\n}\n", "export const MOBILE_LANDSCAPE = '(max-width: 899px)';\nexport const TABLET_UP = '(min-width: 900px)';\nexport const DESKTOP_UP = '(min-width: 1200px)';\nexport const LARGE_DESKTOP = '(min-width: 1440px)';\n", "import {\n    TABLET_UP,\n    DESKTOP_UP,\n    LARGE_DESKTOP,\n    MOBILE_LANDSCAPE,\n} from './media.js';\n\nconst styles = document.createElement('style');\n\nstyles.innerHTML = `\n:root {\n\n    --consonant-merch-card-detail-font-size: 12px;\n    --consonant-merch-card-detail-font-weight: 500;\n    --consonant-merch-card-detail-letter-spacing: 0.8px;\n    --consonant-merch-card-background-color: #fff;\n\n    --consonant-merch-card-heading-font-size: 18px;\n    --consonant-merch-card-heading-line-height: 22.5px;\n    --consonant-merch-card-heading-secondary-font-size: 14px;\n    --consonant-merch-card-body-font-size: 14px;\n    --consonant-merch-card-body-line-height: 21px;\n\n    /* spacing */\n    --consonant-merch-spacing-xxxs: 4px;\n    --consonant-merch-spacing-xxs: 8px;\n    --consonant-merch-spacing-xs: 16px;\n    --consonant-merch-spacing-s: 24px;\n    --consonant-merch-spacing-m: 32px;\n\n    /* headings */\n    --consonant-merch-card-heading-xs-font-size: 18px;\n    --consonant-merch-card-heading-xs-line-height: 22.5px;\n    --consonant-merch-card-heading-s-font-size: 20px;\n    --consonant-merch-card-heading-s-line-height: 25px;\n    --consonant-merch-card-heading-m-font-size: 24px;\n    --consonant-merch-card-heading-m-line-height: 30px;\n    --consonant-merch-card-heading-l-font-size: 20px;\n    --consonant-merch-card-heading-l-line-height: 30px;\n    --consonant-merch-card-heading-xl-font-size: 36px;\n    --consonant-merch-card-heading-xl-line-height: 45px;\n\n    /* detail */\n    --consonant-merch-card-detail-m-font-size: 12px;\n    --consonant-merch-card-detail-m-line-height: 15px;\n    --consonant-merch-card-detail-m-font-weight: 700;\n    --consonant-merch-card-detail-m-letter-spacing: 1px;\n\n    /* body */\n    --consonant-merch-card-body-xxs-font-size: 12px;\n    --consonant-merch-card-body-xxs-line-height: 18px;\n    --consonant-merch-card-body-xxs-letter-spacing: 1px;\n    --consonant-merch-card-body-xs-font-size: 14px;\n    --consonant-merch-card-body-xs-line-height: 21px;\n    --consonant-merch-card-body-m-font-size: 18px;\n    --consonant-merch-card-body-m-line-height: 27px;\n    --consonant-merch-card-body-l-font-size: 20px;\n    --consonant-merch-card-body-l-line-height: 30px;\n    --consonant-merch-card-body-xl-font-size: 22px;\n    --consonant-merch-card-body-xl-line-height: 33px;\n\n\n    --consonant-merch-card-heading-padding: 0;\n    --consonant-merch-card-image-height: 180px;\n\n    /* colors */\n    --consonant-merch-card-border-color: #eaeaea;\n    --color-accent: #1473E6;\n    --color-black: #000;\n\n    /* merch card generic */\n    --consonant-merch-card-max-width: 378px;\n\n    /* special offers mobile */\n    --consonant-merch-card-special-offer-width: 300px;\n\n    /* segment */\n    --consonant-merch-card-segment-max-width: 378px;\n\n    /* plans */\n    --consonant-merch-card-plans-max-width: 302px;\n    --consonant-merch-card-plans-icon-size: 40px;\n\n    /* catalog */\n    --consonant-merch-card-catalog-width: 300px;\n    --consonant-merch-card-catalog-icon-size: 40px;\n}\n\nmerch-cards {\n    display: contents;\n}\n\n.one-merch-card,\n.two-merch-cards,\n.three-merch-cards,\n.four-merch-cards {\n    display: grid;\n    justify-content: center;\n    justify-items: center;\n    padding: var(--spacing-m);\n    gap: var(--spacing-m);\n}\n\n@media screen and ${MOBILE_LANDSCAPE} {\n    .one-merch-card,\n    .two-merch-cards,\n    .three-merch-cards,\n    .four-merch-cards {\n        grid-template-columns: fit-content(100%);\n    }\n}\n\n/* Tablet */\n@media screen and ${TABLET_UP} {\n    :root {\n        --consonant-merch-card-special-offer-width: 302px;\n        --consonant-merch-card-catalog-width: 302px;\n    }\n\n    .two-merch-cards,\n    .three-merch-cards,\n    .four-merch-cards {\n        grid-template-columns: repeat(2, fit-content(100%));\n    }\n}\n\n/* desktop */\n@media screen and ${DESKTOP_UP} {\n    :root {\n        --consonant-merch-card-special-offer-width: 378px;\n        --consonant-merch-card-catalog-width: 276px;\n    }\n\n    .three-merch-cards,\n    .four-merch-cards {\n        grid-template-columns: repeat(3, fit-content(100%));\n    }\n}\n\n/* Large desktop */\n    @media screen and ${LARGE_DESKTOP} {\n    :root {\n\n    }\n\n    .four-merch-cards {\n        grid-template-columns: repeat(4, fit-content(100%));\n    }\n}\n\n[class*=\"-merch-cards\"].m-gap {\n    gap: var(--consonant-merch-spacing-xs);\n    padding: var(--consonant-merch-spacing-xs);\n}\n\n[class*=\"-merch-cards\"].l-gap {\n    gap: var(--consonant-merch-spacing-s);\n    padding: var(--consonant-merch-spacing-s);\n}\n\n[class*=\"-merch-cards\"].xl-gap {\n    gap: var(--consonant-merch-spacing-m);\n    padding: var(--consonant-merch-spacing-m);\n}\n\ndiv[class$='-badge'] {\n    position: absolute;\n    top: 16px;\n    right: 0;\n    font-size: var(--type-heading-xxs-size);\n    font-weight: 500;\n    max-width: 150px;\n    line-height: 16px;\n    text-align: center;\n    padding: 8px 11px;\n    border-radius: 5px 0 0 5px;\n}\n\nmerch-card.background-opacity-70 {\n    background-color: rgba(255 255 255 / 70%);\n}\n\nmerch-card hr {\n    background-color: var(--color-gray-200);\n    border: none;\n    height: 1px;\n    width: 100%;\n    margin-bottom: var(--consonant-merch-card-spacing-xs);\n}\n\nmerch-card.has-divider hr {\n    margin: var(--consonant-merch-card-spacing-xs) 0;\n    margin-bottom: var(--spacing-xxs);\n}\n\nmerch-card[variant=\"special-offers\"] span[is=\"inline-price\"][data-template=\"priceStrikethrough\"] {\n    font-size: var(--consonant-merch-card-body-xs-font-size);\n}\n\nmerch-card[variant=\"segment\"] {\n    max-width: var(--consonant-merch-card-segment-max-width);\n}\n\nmerch-card[variant=\"plans\"] {\n    max-width: var(--consonant-merch-card-plans-max-width);\n}\n\nmerch-card p, merch-card h3, merch-card h4 {\n    margin: 0;\n}\n\nmerch-card [is=inline-price] {\n    display: inline-block;\n}\n\nmerch-card [slot='heading-xs'] {\n    font-size: var(--consonant-merch-card-heading-xs-font-size);\n    line-height: var(--consonant-merch-card-heading-xs-line-height);\n    margin: 0;\n    margin-bottom: var(--consonant-merch-spacing-xxs);\n}\n\nmerch-card [slot='heading-s'] {\n    font-size: var(--consonant-merch-card-heading-s-font-size);\n    line-height: var(--consonant-merch-card-heading-s-line-height);\n    margin: 0;\n}\n\nmerch-card [slot='heading-m'] {\n    font-size: var(--consonant-merch-card-heading-m-font-size);\n    line-height: var(--consonant-merch-card-heading-m-line-height);\n    margin: 0;\n}\n\nmerch-card [slot='heading-l'] {\n    font-size: var(--consonant-merch-card-heading-l-font-size);\n    line-height: var(--consonant-merch-card-heading-l-line-height);\n    margin: 0;\n}\n\nmerch-card [slot='heading-xl'] {\n    font-size: var(--consonant-merch-card-heading-xl-font-size);\n    line-height: var(--consonant-merch-card-heading-xl-line-height);\n    margin: 0;\n}\n\nmerch-card [slot='detail-m'] {\n    font-size: var(--consonant-merch-card-detail-m-font-size);\n    letter-spacing: var(--consonant-merch-card-detail-m-letter-spacing);\n    font-weight: var(--consonant-merch-card-detail-m-font-weight);\n    text-transform: uppercase;\n    margin: 0;\n}\n\nmerch-card [slot=\"body-xxs\"] {\n    font-size: var(--consonant-merch-card-body-xxs-font-size);\n    line-height: var(--consonant-merch-card-body-xxs-line-height);\n    font-weight: normal;\n    letter-spacing: var(--consonant-merch-card-body-xxs-letter-spacing);\n}\n\nmerch-card [slot=\"body-xs\"] {\n    font-size: var(--consonant-merch-card-body-xs-font-size);\n    line-height: var(--consonant-merch-card-body-xs-line-height);\n}\n\nmerch-card [slot=\"body-m\"] {\n    font-size: var(--consonant-merch-card-body-m-font-size);\n    line-height: var(--consonant-merch-card-body-m-line-height);\n}\n\nmerch-card [slot=\"body-l\"] {\n    font-size: var(--consonant-merch-card-body-l-font-size);\n    line-height: var(--consonant-merch-card-body-l-line-height);\n}\n\nmerch-card [slot=\"body-xl\"] {\n    font-size: var(--consonant-merch-card-body-xl-font-size);\n    line-height: var(--consonant-merch-card-body-xl-line-height);\n}\n\nmerch-card[variant=\"special-offers\"] [slot=\"list\"] ul {\n    padding-left: 0;\n    padding-bottom: var(--consonant-merch-spacing-xxs);\n    margin-top: 0;\n    margin-bottom: 0;\n    list-style-position: inside;\n    list-style-type: '\u2022 ';\n}\n\nmerch-card[variant=\"special-offers\"] ul li {\n    padding-left: 0;\n    line-height: var(--consonant-merch-card-body-line-height);\n    font-size: var(--consonant-merch-card-body-xxs-font-size);\n}\n\nmerch-card[variant=\"special-offers\"] ul li ::marker {\n    margin-right: 0;\n}\n\nmerch-card[variant=\"catalog\"] [slot=\"action-menu-content\"] {\n    background-color: #000;\n    color: #fff;\n    font-size: var(--consonant-merch-card-body-xs-font-size);\n    width: fit-content;\n    padding: var(--consonant-merch-spacing-xs);\n    border-radius: var(--consonant-merch-spacing-xxxs);\n    position: absolute;\n    top: 55px;\n    right: 15px;\n    line-height: var(--consonant-merch-card-body-line-height);\n}\n\nmerch-card[variant=\"catalog\"] [slot=\"action-menu-content\"] ul {\n    padding-left: 0;\n    padding-bottom: var(--consonant-merch-spacing-xss);\n    margin-top: 0;\n    margin-bottom: 0;\n    list-style-position: inside;\n    list-style-type: '\u2022 ';\n}\n\nmerch-card[variant=\"catalog\"] [slot=\"action-menu-content\"] ul li {\n    padding-left: 0;\n    line-height: var(--consonant-merch-card-body-line-height);\n}\n\nmerch-card[variant=\"catalog\"] [slot=\"action-menu-content\"] ::marker {\n    margin-right: 0;\n}\n\nmerch-card[variant=\"catalog\"] [slot=\"action-menu-content\"] a {\n    color: var(--consonant-merch-card-background-color);\n    text-decoration: underline;\n}\n\n.button--inactive {\n    display: none;\n}\n\ndiv[slot=\"footer\"] a.con-button {\n    margin-left: var(--consonant-merch-spacing-xs);\n}\n`;\ndocument.head.appendChild(styles);\n", "import { html, LitElement } from 'lit';\nimport { styles } from './merch-card.css.js';\nimport { encodeSvg } from './utils.js';\nimport secureTransactionIcon from './img/secure-transaction.svg';\nimport ellipsis from './img/ellipsis.svg';\nimport checkmark from './img/checkmark-white-small.svg';\n\nimport { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from './focus.js';\nimport './global.css.js';\n\nexport const MERCH_CARD_NODE_NAME = 'MERCH-CARD';\nexport const MERCH_CARD = 'merch-card';\n\nexport class MerchCard extends LitElement {\n    static properties = {\n        name: { type: String },\n        variant: { type: String },\n        type: { type: String },\n        badgeColor: { type: String, attribute: 'badge-color' },\n        badgeBackgroundColor: {\n            type: String,\n            attribute: 'badge-background-color',\n        },\n        badgeText: { type: String, attribute: 'badge-text' },\n        icons: { type: Array },\n        actionmenu: { type: Boolean, attribute: 'action-menu' },\n        actionMenuContent: { type: String, attribute: 'action-menu-content' },\n        title: { type: String },\n        description: { type: String },\n        image: { type: String, attribute: 'image' },\n        customHr: { type: String, attribute: 'hr' },\n        detailBg: { type: String, attribute: 'detail-bg' },\n        secureLabel: { type: String, attribute: 'secure-label' },\n        checkboxLabel: { type: String, attribute: 'checkbox-label' },\n        evergreen: { type: Boolean },\n        filters: {\n            type: String,\n            reflect: true,\n            converter: {\n                fromAttribute: (value) => {\n                    return Object.fromEntries(\n                        value.split(',').map((filter) => {\n                            const [key, order] = filter.split(':');\n                            const value = Number(order);\n                            return [key, isNaN(value) ? {} : value];\n                        })\n                    );\n                },\n                toAttribute: (value) => {\n                    return Object.entries(value)\n                        .map(([key, value]) =>\n                            isNaN(value) ? key : `${key}:${value}`\n                        )\n                        .join(',');\n                },\n            },\n        },\n        types: {\n            type: String,\n            attribute: 'types',\n            reflect: true,\n        },\n    };\n\n    static styles = [styles];\n\n    constructor() {\n        super();\n        this.filters = {};\n        this.types = '';\n    }\n\n    updated(changedProperties) {\n        if (changedProperties.has('badgeBackgroundColor')) {\n            this.style.border = `1px solid ${this.badgeBackgroundColor}`;\n        }\n    }\n\n    renderIcons() {\n        return this.icons && this.icons.length > 0\n            ? html`\n                  <div class=\"icons\">\n                      ${this.icons.map(\n                          (icon) =>\n                              html`<img src=\"${icon.src}\" alt=\"${icon.alt}\" />`\n                      )}\n                  </div>\n              `\n            : '';\n    }\n\n    createCheckBox() {\n        this.style.setProperty(\n            '--checkmark-image',\n            `url(${encodeSvg(checkmark)})`\n        );\n        return this.checkboxLabel\n            ? html`\n                  <div class=\"checkbox-container\">\n                      <input id=\"alt-cta\" type=\"checkbox\" />\n                      <span\n                          class=\"checkmark\"\n                          @click=\"${this.toggleCheckBox}\"\n                      ></span>\n                      <label class=\"checkbox-label\"\n                          >${this.checkboxLabel}</label\n                      >\n                  </div>\n              `\n            : '';\n    }\n\n    createPlansFooter() {\n        const footerSlot = html` <slot name=\"footer\"></slot>`;\n        const secureLabel = this['secureLabel'];\n        return secureLabel\n            ? html` <div class=\"standard-wrapper\">\n                  <div class=\"secure-transaction-wrapper\">\n                      <span\n                          class=\"secure-transaction-icon\"\n                          style=\"background-image: url('${encodeSvg(\n                              secureTransactionIcon\n                          )}')\"\n                      ></span>\n\n                      <span class=\"secure-transaction-label\"\n                          >${secureLabel}</span\n                      >\n                  </div>\n                  ${footerSlot}\n              </div>`\n            : footerSlot;\n    }\n\n    decorateRibbon() {\n        let additionalStyles;\n        if (!this.badgeBackgroundColor || !this.badgeColor || !this.badgeText) {\n            return;\n        }\n        if (this.evergreen) {\n            additionalStyles = `border: 1px solid ${this.badgeBackgroundColor}; border-right: none;`;\n        }\n        return html`\n            <div\n                class=\"${this.variant}-ribbon\"\n                style=\"background-color: ${this\n                    .badgeBackgroundColor}; color: ${this\n                    .badgeColor}; ${additionalStyles\n                    ? ` ${additionalStyles}`\n                    : ''}\"\n            >\n                ${this.badgeText}\n            </div>\n        `;\n    }\n\n    toggleCheckBox() {\n        const checkbox = this.shadowRoot.querySelector('#alt-cta');\n        checkbox.checked = !checkbox.checked;\n        const footerSlot = this.shadowRoot.querySelector('slot[name=\"footer\"]');\n        if (footerSlot) {\n            const nodes = footerSlot.assignedNodes({ flatten: true });\n            let active, altCta;\n            nodes.forEach((node) => {\n                altCta = node.querySelector('.alt-cta');\n                active = node.querySelector('.active');\n            });\n            if (active && altCta) {\n                active.classList.toggle('button--inactive', checkbox.checked);\n                altCta.classList.toggle('button--inactive', !checkbox.checked);\n            }\n        }\n    }\n\n    toggleActionMenu() {\n        const actionMenuContentSlot = this.shadowRoot.querySelector(\n            'slot[name=\"action-menu-content\"]'\n        );\n        actionMenuContentSlot.classList.toggle('hidden');\n    }\n\n    get title() {\n        const heading = this.querySelector('[slot=\"heading-xs\"]');\n        return heading.textContent.trim();\n    }\n\n    /**\n     * If the card is the single app, set the order for all filters to 2.\n     * If not, increment the order for all filters after the second card by 1.\n     * @param {*} singleApp\n     */\n    updateFilters(singleApp) {\n        const newFilters = { ...this.filters };\n        Object.keys(newFilters).forEach((key) => {\n            // if single app set the order for all filters to 2.\n            if (singleApp) {\n                newFilters[key] = Math.min(newFilters[key], 2);\n                return;\n            }\n            const value = newFilters[key];\n            // skip first card and cards without explicit order\n            if (value === 1 || isNaN(value)) return;\n            newFilters[key] = Number(value) + 1;\n        });\n        this.filters = newFilters;\n    }\n\n    includes(text) {\n        return this.textContent.match(new RegExp(text, 'i')) !== null;\n    }\n\n    render() {\n        switch (this.variant) {\n            case 'special-offers':\n                return this.renderSpecialOffer();\n            case 'segment':\n                return this.renderSegment();\n            case 'plans':\n                return this.renderPlans();\n            case 'catalog':\n                return this.renderCatalog();\n            default:\n                return html` <div />`;\n        }\n    }\n\n    renderSpecialOffer() {\n        return html` <div\n                class=\"image\"\n                style=\"${this.image\n                    ? `background-image: url(${this.image})`\n                    : ''}\"\n            >\n                ${this.decorateRibbon()}\n            </div>\n            <div class=\"body\">\n                <slot name=\"detail-m\"></slot>\n                <slot name=\"heading-xs\"></slot>\n                <slot name=\"body-xs\"></slot>\n            </div>\n            ${this.evergreen\n                ? html`\n                      <div\n                          class=\"detail-bg-container\"\n                          style=\"background: ${this['detailBg']}\"\n                      >\n                          <slot name=\"detail-bg\"></slot>\n                      </div>\n                  `\n                : html`\n                      <hr />\n                      <slot name=\"footer\"></slot>\n                  `}`;\n    }\n\n    renderSegment() {\n        return html` ${this.decorateRibbon()}\n            <div class=\"body\">\n                <slot name=\"heading-xs\"></slot>\n                <slot name=\"body-xs\"></slot>\n            </div>\n            <hr />\n            <slot name=\"footer\"></slot>`;\n    }\n\n    renderPlans() {\n        return html` ${this.decorateRibbon()}\n            <div class=\"body\">\n                ${this.renderIcons()}\n                <slot name=\"heading-xs\"></slot>\n                <slot name=\"heading-m\"></slot>\n                <slot name=\"body-xxs\"></slot>\n                <slot name=\"body-xs\"></slot>\n                ${this.createCheckBox()}\n            </div>\n            ${this.createPlansFooter()}`;\n    }\n\n    renderCatalog() {\n        return html` <div class=\"body\">\n                <div class=\"top-section\">\n                    ${this.renderIcons()} ${this.decorateRibbon()}\n                    <div\n                        class=\"action-menu ${!this.actionmenu\n                            ? 'hidden'\n                            : 'invisible'}\"\n                        style=\"background-image: url(${encodeSvg(ellipsis)})\"\n                        @click=\"${this.toggleActionMenu}\"\n                    ></div>\n                </div>\n                <slot\n                    name=\"action-menu-content\"\n                    class=\"action-menu-content ${!this.actionMenuContent\n                        ? 'hidden'\n                        : ''}\"\n                    >${this.actionMenuContent}</slot\n                >\n                <slot name=\"heading-xs\"></slot>\n                <slot name=\"heading-m\"></slot>\n                <slot name=\"body-xxs\"></slot>\n                <slot name=\"body-xs\"></slot>\n            </div>\n            <slot name=\"footer\"></slot>`;\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.setAttribute('tabindex', '0');\n        this.addEventListener('keydown', this.keydownHandler);\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.removeEventListener('keydown', this.keydownHandler);\n    }\n\n    // custom methods\n    keydownHandler(e) {\n        const currentCard = document.activeElement;\n        if (currentCard && currentCard.tagName === MERCH_CARD_NODE_NAME) {\n            let nextCard;\n\n            const visibleCards = Array.from(\n                this.parentElement.querySelectorAll('merch-card')\n            )\n                .filter(\n                    (card) => window.getComputedStyle(card).display !== 'none'\n                )\n                .sort((a, b) => {\n                    return (\n                        parseInt(window.getComputedStyle(a).order, 0) -\n                        parseInt(window.getComputedStyle(b).order, 0)\n                    );\n                });\n\n            // Determine the number of columns by checking the position of cards\n            let cols = 1;\n            const firstCardTop = visibleCards[0].getBoundingClientRect().top;\n            while (\n                cols < visibleCards.length &&\n                visibleCards[cols].getBoundingClientRect().top === firstCardTop\n            ) {\n                cols++;\n            }\n\n            function getPosition(card) {\n                const index = visibleCards.indexOf(card);\n                return {\n                    row: Math.floor(index / cols),\n                    col: index % cols,\n                };\n            }\n\n            switch (e.code) {\n                case ARROW_LEFT:\n                    const leftPos = getPosition(currentCard);\n                    if (leftPos.col > 0) {\n                        nextCard =\n                            visibleCards[\n                                leftPos.row * cols + (leftPos.col - 1)\n                            ];\n                    }\n                    break;\n                case ARROW_RIGHT:\n                    const rightPos = getPosition(currentCard);\n                    if (rightPos.col < cols - 1) {\n                        nextCard =\n                            visibleCards[\n                                rightPos.row * cols + (rightPos.col + 1)\n                            ];\n                    }\n                    break;\n                case ARROW_UP:\n                    const upPos = getPosition(currentCard);\n                    if (upPos.row > 0) {\n                        nextCard =\n                            visibleCards[(upPos.row - 1) * cols + upPos.col];\n                    }\n                    break;\n                case ARROW_DOWN:\n                    const downPos = getPosition(currentCard);\n                    if (\n                        downPos.row <\n                        Math.floor(visibleCards.length / cols) -\n                            (visibleCards.length % cols > downPos.col ? 0 : 1)\n                    ) {\n                        nextCard =\n                            visibleCards[\n                                (downPos.row + 1) * cols + downPos.col\n                            ];\n                    }\n                    break;\n            }\n\n            if (nextCard) {\n                nextCard.focus();\n                e.preventDefault();\n            }\n        }\n    }\n}\n\nif (!customElements.get(MERCH_CARD.toLowerCase())) {\n    customElements.define('merch-card', MerchCard);\n}\n", "import { css, unsafeCSS } from 'lit';\nimport { DESKTOP_UP, TABLET_UP } from './media.js';\n\nexport const styles = css`\n    :host {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        flex: 1 1 0;\n        text-align: left;\n        border-radius: var(--consonant-merch-spacing-xxxs);\n        background-color: var(--consonant-merch-card-background-color);\n        overflow: auto;\n        grid-template-columns: repeat(auto-fit, minmax(300px, max-content));\n        background-color: var(--consonant-merch-card-background-color);\n        font-family: var(--body-font-family, 'Adobe Clean');\n        border-radius: var(--consonant-merch-spacing-xs);\n        border: 1px solid var(--consonant-merch-card-border-color);\n    }\n\n    .invisible {\n        visibility: hidden;\n    }\n\n    :host(:hover) .invisible {\n        visibility: visible;\n    }\n\n    slot {\n        display: block;\n    }\n\n    .top-section {\n        display: flex;\n        justify-content: flex-start;\n        height: 100%;\n        flex-direction: row;\n        flex-wrap: wrap;\n    }\n\n    .icons {\n        display: flex;\n        width: fit-content;\n        fle-direction: row;\n    }\n\n    .icons img {\n        width: var(--consonant-merch-card-plans-icon-size);\n        height: var(--consonant-merch-card-plans-icon-size);\n        margin-right: var(--consonant-merch-spacing-xxs);\n    }\n\n    .body {\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        height: 100%;\n        flex-direction: column;\n        gap: var(--consonant-merch-spacing-xxs);\n        padding: var(--consonant-merch-spacing-xs);\n    }\n\n    ::slotted([slot='footer']) {\n        display: flex;\n        justify-content: flex-end;\n        margin-top: auto;\n        box-sizing: border-box;\n        align-self: flex-end;\n        width: 100%;\n        padding: var(--consonant-merch-spacing-xs);\n    }\n\n    hr {\n        background-color: var(--color-gray-200);\n        border: none;\n        height: 1px;\n        width: auto;\n        margin-top: 0;\n        margin-bottom: 0;\n        margin-left: var(--consonant-merch-spacing-xs);\n        margin-right: var(--consonant-merch-spacing-xs);\n    }\n\n    div[class$='-ribbon'] {\n        position: absolute;\n        top: 16px;\n        right: 0;\n        font-size: var(--type-heading-xxs-size);\n        font-weight: 500;\n        max-width: 150px;\n        line-height: 16px;\n        text-align: center;\n        padding: 8px 11px;\n        border-radius: 5px 0 0 5px;\n    }\n\n    .body .catalog-ribbon {\n        display: flex;\n        height: fit-content;\n        flex-direction: column;\n        width: fit-content;\n        border-radius: 5px;\n        position: relative;\n        top: 0;\n        margin-left: var(--consonant-merch-spacing-xxs);\n    }\n\n    .image {\n        flex-grow: 1;\n        position: relative;\n        width: 100%;\n        min-height: var(--consonant-merch-card-image-height);\n        max-height: var(--consonant-merch-card-image-height);\n        background-color: var(--background-color);\n        background-position: 50% 50%;\n        background-repeat: no-repeat;\n        background-size: cover;\n    }\n\n    .detail-bg-container {\n        right: 0;\n        padding: var(--consonant-merch-spacing-xs);\n        border-radius: 5px;\n        font-size: var(--consonant-merch-card-body-font-size);\n        margin: var(--consonant-merch-spacing-xs);\n    }\n\n    .action-menu {\n        display: flex;\n        width: 32px;\n        height: 32px;\n        position: absolute;\n        top: 16px;\n        right: 16px;\n        background-color: #f6f6f6;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: 16px 16px;\n    }\n    .hidden {\n        visibility: hidden;\n    }\n\n    .standard-wrapper {\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--spacing-xs);\n        align-items: center;\n        justify-content: space-between;\n    }\n\n    .checkbox-label,\n    .secure-transaction-label {\n        font-size: var(--consonant-merch-card-body-xxs-font-size);\n        line-height: 1.3;\n        color: var(--color-gray-600);\n    }\n\n    .secure-transaction-label {\n        white-space: nowrap;\n    }\n\n    .secure-transaction-icon {\n        width: 12px;\n        height: 15px;\n        display: inline-block;\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n\n    .checkbox-container,\n    .secure-transaction-wrapper {\n        display: flex;\n        align-items: center;\n        gap: var(--consonant-merch-spacing-xxs);\n    }\n\n    .secure-transaction-wrapper {\n        padding-left: var(--consonant-merch-spacing-xs);\n    }\n\n    .checkbox-container input[type='checkbox']:checked + .checkmark {\n        background-color: var(--color-accent);\n        background-image: var(--checkmark-image);\n        border-color: var(--color-accent);\n    }\n\n    .checkbox-container input[type='checkbox'] {\n        display: none;\n    }\n\n    .checkbox-container .checkmark {\n        position: relative;\n        display: inline-block;\n        width: 12px;\n        height: 12px;\n        border: 2px solid #757575;\n        background: #fff;\n        border-radius: 2px;\n        cursor: pointer;\n        margin-top: 2px;\n    }\n\n    :host([type='super-wide']) {\n        grid-column: span 4;\n    }\n\n    :host([type='wide']) {\n        grid-column: span 2;\n    }\n\n    :host([variant='special-offers']) {\n        min-height: 438px;\n    }\n\n    :host([variant='special-offers'][type='wide']) {\n        width: auto;\n        min-height: 438px;\n    }\n\n    :host([variant='special-offers'][type='super-wide']) {\n        width: auto;\n        min-height: 438px;\n    }\n\n    /* catalog */\n    :host([variant='catalog']) {\n        width: var(--consonant-merch-card-catalog-width);\n        min-height: 296px;\n    }\n\n    :host([variant='catalog'][type='wide']) {\n        width: auto;\n    }\n\n    :host([variant='catalog'][type='super-wide']) {\n        width: auto;\n    }\n\n    /* Tablet */\n    @media screen and ${unsafeCSS(TABLET_UP)} {\n    }\n\n    /* Laptop */\n    @media screen and ${unsafeCSS(DESKTOP_UP)} {\n    }\n`;\n", "export const encodeSvg = (svg) => {\n    return `data:image/svg+xml;base64,${btoa(svg)}`;\n};\n", "<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" width=\"10\" height=\"10\" fill=\"#757575\" viewBox=\"0 0 12 15\"><path d=\"M11.5 6H11V5A5 5 0 1 0 1 5v1H.5a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h11a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5ZM3 5a3 3 0 1 1 6 0v1H3Zm4 6.111V12.5a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1.389a1.5 1.5 0 1 1 2 0Z\"/></svg>\n", "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" data-name=\"Group 308011\"><circle cx=\"2\" cy=\"2\" r=\"2\" fill=\"#2c2c2c\" data-name=\"Ellipse 70\" transform=\"translate(6 6)\"/><circle cx=\"2\" cy=\"2\" r=\"2\" fill=\"#2c2c2c\" data-name=\"Ellipse 71\" transform=\"translate(12 6)\"/><circle cx=\"2\" cy=\"2\" r=\"2\" fill=\"#2c2c2c\" data-name=\"Ellipse 72\" transform=\"translate(0 6)\"/></svg>\n", "<svg xmlns=\"http://www.w3.org/2000/svg\" xml:space=\"preserve\" viewBox=\"0 0 10 10\"><path fill=\"#fff\" d=\"M3.788 9A.999.999 0 0 1 3 8.615l-2.288-3a1 1 0 1 1 1.576-1.23l1.5 1.991 3.924-4.991a1 1 0 1 1 1.576 1.23l-4.712 6A.999.999 0 0 1 3.788 9z\" class=\"spectrum-UIIcon--medium\"/></svg>\n", "// List of focusable element selectors\nexport const FOCUSABLE_SELECTORS = [\n    'a[href]:not([disabled])',\n    'button:not([disabled])',\n    'textarea:not([disabled])',\n    'input[type=\"text\"]:not([disabled])',\n    'input[type=\"radio\"]:not([disabled])',\n    'input[type=\"checkbox\"]:not([disabled])',\n    'select:not([disabled])',\n    '[tabindex]:not([tabindex=\"-1\"]):not([disabled])',\n].join(', ');\n\nexport const [ARROW_LEFT, ARROW_RIGHT, ARROW_UP, ARROW_DOWN] = [\n    'ArrowLeft',\n    'ArrowRight',\n    'ArrowUp',\n    'ArrowDown',\n];\nexport const FOCUS_KEYS = [\n    'Tab',\n    ARROW_LEFT,\n    ARROW_RIGHT,\n    ARROW_UP,\n    ARROW_DOWN,\n];\n\nexport function getFirstLastFocusableElement(container) {\n    // Query all focusable elements in the container\n    const focusableElements = container.querySelectorAll(FOCUSABLE_SELECTORS);\n\n    // Return the first and last element in the list or empty array if there's no focusable element\n    return focusableElements.length > 0\n        ? [\n              focusableElements[0],\n              focusableElements[focusableElements.length - 1],\n          ]\n        : [];\n}\n"],
  "mappings": "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",
  "names": ["css", "html", "LitElement", "EVENT_HASHCHANGE", "parseState", "hash", "result", "keyValuePairs", "pair", "key", "value", "pushState", "state", "deeplink", "callback", "handler", "e", "MOBILE_LANDSCAPE", "TABLET_UP", "DESKTOP_UP", "LARGE_DESKTOP", "styles", "MOBILE_LANDSCAPE", "TABLET_UP", "DESKTOP_UP", "LARGE_DESKTOP", "html", "LitElement", "css", "unsafeCSS", "styles", "css", "unsafeCSS", "TABLET_UP", "DESKTOP_UP", "encodeSvg", "svg", "secure_transaction_default", "ellipsis_default", "checkmark_white_small_default", "FOCUSABLE_SELECTORS", "ARROW_LEFT", "ARROW_RIGHT", "ARROW_UP", "ARROW_DOWN", "MERCH_CARD_NODE_NAME", "MERCH_CARD", "MerchCard", "LitElement", "value", "filter", "key", "order", "styles", "changedProperties", "html", "icon", "encodeSvg", "checkmark_white_small_default", "footerSlot", "secureLabel", "secure_transaction_default", "additionalStyles", "checkbox", "nodes", "active", "altCta", "node", "singleApp", "newFilters", "text", "ellipsis_default", "currentCard", "getPosition", "card", "index", "visibleCards", "cols", "nextCard", "a", "b", "firstCardTop", "ARROW_LEFT", "leftPos", "ARROW_RIGHT", "rightPos", "ARROW_UP", "upPos", "ARROW_DOWN", "downPos", "MERCH_CARDS", "SortOrder", "makeCategoryFilter", "filter", "elements", "element", "makeTypeFilter", "types", "type", "makeAlphabeticalSorter", "a", "b", "makeAuthoredSorter", "makeSearcher", "search", "MerchCards", "LitElement", "html", "changedProperties", "updateChildren", "children", "child", "MERCH_CARD_NODE_NAME", "card", "result", "reducer", "index", "pageSize", "reduced", "pushState", "deeplink", "sort", "single_app", "page", "css"]
}
